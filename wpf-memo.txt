
カスタムコントロール、ビヘイビア、添付プロパティ
こういう問題点がありますよ
    一覧にする

こういう対処を行ってきましたよ
    一覧にする

ですが、改善が難しいこともありますよ、でしめくくる


■WPFの全てについて知ってはいないが、問題になりそうなことは過去に一通り調べたりしたことはあります。
・WPFの各コントロール
・CollectionViewの使用
・レイアウト Grid/StackPanel/DockPanel/WrapPanel
・ComponentOneのChartを使用したグラフ表示（棒、折れ線、箱ひげ図、ヒートマップ）
・カスタムコントロール/依存関係プロパティ
・ReactiveProperty/リアクティブプログラミング
・Messengerパターンを使用したViewModelからViewへの通知
・DIを使用したViewModelへのModelの渡し方
・WebAPIを使用したViewModelからのModelの操作
・Converter作成
・DataTemplate、ControlTemplate
・共通スタイル定義

■補足
・Prismといった大規模開発向けのMVVMフレームワークの導入経験はない
    (Prismが使用されている現場で、PrismのRegionに埋め込む子画面側の開発担当だった為)
・すべてについて実装を経験したわけではないが、全体像は把握しているので、都度しらべて対処
・正解がない、判断が難しい部分の多いので、複数の選択肢を提案しますので、相談して決めていく

■WPF問題点
・Windowsフォームと比較して、パフォーマンスの問題が出やすい部分もある
    ・DataGrid/Chartで大量のデータを表示する場合
    ・XAMLの書き方（どういう風にでもかける）
    ・レイアウトのしくみ（HTMLレンダリングの様に子要素で親要素のサイズが決まる）
    ・テンプレート
    ・コードビハインド、ビヘイビア/アクション/トリガー
    ・
・Windowsフォームが即時描画、WPFは遅延描画なので、コード側で実行した処理に対する遅延やタイミングの問題が出ることも
・守備範囲が広い、覚えなければならないことが多い

